# time complexity: O(n^2)
# space complexity: O(n)
# dp
class Solution:
    def integerBreak(self, n: int) -> int:
        dp = [0] + [1]*n
        for i in range(2,n+1):
            dp[i] = i - 1
            for j in range(1, i):
                pre = dp[j]
                if dp[j] < j:
                    pre = j
                mul = dp[i-j]
                if dp[i-j] < i-j:
                    mul = i-j
                if pre*mul > dp[i]:
                    dp[i] = pre*mul
        return dp[n]
